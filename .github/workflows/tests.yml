# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  test-macos:
    name: macOS Tests
    runs-on: macos-15
    steps:
      - name: Select Xcode 16.3
        run: sudo xcode-select -s /Applications/Xcode_16.3.app

      - name: Checkout
        uses: actions/checkout@v4

      - name: Run macOS Tests
        run: swift test --enable-code-coverage

  test-ios:
    name: iOS Simulator Tests
    runs-on: macos-15
    steps:
      - name: Select Xcode 16.3
        run: sudo xcode-select -s /Applications/Xcode_16.3.app

      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Temporary Xcode Project for SPM
        run: |
          mkdir XcodeSPMProject
          cd XcodeSPMProject
          swift package init --type executable
          echo '
          // swift-tools-version: 6.1
          import PackageDescription

          let package = Package(
              name: "WrapperApp",
              platforms: [.iOS(.v16)],
              products: [],
              dependencies: [
                  .package(path: "..")
              ],
              targets: [
                  .executableTarget(name: "WrapperApp", dependencies: []),
                  .testTarget(name: "WrapperAppTests", dependencies: [])
              ]
          )' > Package.swift

          swift package generate-xcodeproj

      - name: List Schemes
        run: xcodebuild -list -project XcodeSPMProject/WrapperApp.xcodeproj

      - name: Run iOS Tests
        run: |
          xcodebuild test \
            -project XcodeSPMProject/WrapperApp.xcodeproj \
            -scheme WrapperApp \
            -destination 'platform=iOS Simulator,name=iPhone 16,OS=18.3'
